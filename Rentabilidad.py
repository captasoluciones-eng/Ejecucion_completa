{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPBZOxdGIqFUGfVGb0ibyL/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MnFYjDGDBoXK","executionInfo":{"status":"ok","timestamp":1758823234883,"user_tz":420,"elapsed":29355,"user":{"displayName":"CAPTA SOLUCIONES","userId":"17177378079453460348"}},"outputId":"6f27eb7f-3751-4cfd-e60c-d9452feb0975"},"outputs":[{"output_type":"stream","name":"stdout","text":["🔹 Iniciando proyecto: Carga Rentabilidad a BigQuery\n","📥 Descargando CSV desde Google Drive...\n"]},{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://drive.google.com/uc?id=1W9UJOlZDhQTmK_vjjrx0eNfGEvqnMdM0\n","To: /content/Rentabilidad_Agrupada.csv\n","100%|██████████| 26.9M/26.9M [00:00<00:00, 123MB/s] \n"]},{"output_type":"stream","name":"stdout","text":["📄 Leyendo CSV...\n","✅ CSV leído correctamente. Filas: 323031  Columnas: 9\n","🧹 Limpiando nombres de columnas...\n","☁ Subiendo datos a BigQuery...\n","✅ Datos subidos correctamente a lookerstudio-consolidacion.DatosLooker_USC.Rentabilidad\n"]}],"source":["# Proyecto_2_CargaRentabilidad.ipynb\n","\n","from google.colab import auth\n","auth.authenticate_user()\n","\n","import pandas as pd\n","import gdown\n","from google.cloud import bigquery\n","\n","print(\"🔹 Iniciando proyecto: Carga Rentabilidad a BigQuery\")\n","\n","# -----------------------------\n","# CONFIGURACIÓN\n","# -----------------------------\n","# No necesitas ruta local para credenciales en Colab\n","file_id = \"1W9UJOlZDhQTmK_vjjrx0eNfGEvqnMdM0\"\n","url_csv = f\"https://drive.google.com/uc?id={file_id}\"\n","archivo_csv = \"Rentabilidad_Agrupada.csv\"\n","\n","proyecto_bq = \"lookerstudio-consolidacion\"\n","dataset_bq = \"DatosLooker_USC\"\n","tabla_bq = \"Rentabilidad\"\n","\n","# -----------------------------\n","# 1. Descargar CSV\n","# -----------------------------\n","print(\"📥 Descargando CSV desde Google Drive...\")\n","gdown.download(url_csv, archivo_csv, quiet=False)\n","\n","# -----------------------------\n","# 2. Leer CSV (forzando separador)\n","# -----------------------------\n","print(\"📄 Leyendo CSV...\")\n","try:\n","    df = pd.read_csv(archivo_csv, sep=\",\", on_bad_lines='skip', low_memory=False, encoding='utf-8-sig')\n","    print(f\"✅ CSV leído correctamente. Filas: {len(df)}  Columnas: {len(df.columns)}\")\n","except Exception as e:\n","    print(\"❌ Error al leer el CSV:\", e)\n","    raise\n","\n","# -----------------------------\n","# 3. Limpiar nombres de columnas para BigQuery\n","# -----------------------------\n","print(\"🧹 Limpiando nombres de columnas...\")\n","df.columns = (\n","    df.columns\n","    .str.strip()                           # quitar espacios\n","    .str.replace(\" \", \"_\")                 # espacios por guiones bajos\n","    .str.replace(r\"[^a-zA-Z0-9_]\", \"\", regex=True)  # quitar caracteres no válidos\n",")\n","\n","# -----------------------------\n","# 4. Subir a BigQuery\n","# -----------------------------\n","print(\"☁ Subiendo datos a BigQuery...\")\n","client = bigquery.Client(project=proyecto_bq)\n","\n","tabla_destino = f\"{proyecto_bq}.{dataset_bq}.{tabla_bq}\"\n","\n","job_config = bigquery.LoadJobConfig(\n","    write_disposition=\"WRITE_TRUNCATE\",\n","    autodetect=True\n",")\n","\n","try:\n","    job = client.load_table_from_dataframe(df, tabla_destino, job_config=job_config)\n","    job.result()\n","    print(f\"✅ Datos subidos correctamente a {tabla_destino}\")\n","except Exception as e:\n","    print(\"❌ Error al subir a BigQuery:\", e)\n"]}]}